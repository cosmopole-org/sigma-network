// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: pixelprof.proto

package pixelprof_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId          string `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	AppName        string `protobuf:"bytes,3,opt,name=appName,proto3" json:"appName,omitempty"`
	Usage          int64  `protobuf:"varint,4,opt,name=usage,proto3" json:"usage,omitempty"`
	IsBlocked      string `protobuf:"bytes,5,opt,name=isBlocked,proto3" json:"isBlocked,omitempty"`
	DeviceId       string `protobuf:"bytes,6,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	CreditMultiply int64  `protobuf:"varint,7,opt,name=creditMultiply,proto3" json:"creditMultiply,omitempty"`
}

func (x *DeviceApp) Reset() {
	*x = DeviceApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceApp) ProtoMessage() {}

func (x *DeviceApp) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceApp.ProtoReflect.Descriptor instead.
func (*DeviceApp) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceApp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceApp) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *DeviceApp) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *DeviceApp) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *DeviceApp) GetIsBlocked() string {
	if x != nil {
		return x.IsBlocked
	}
	return ""
}

func (x *DeviceApp) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceApp) GetCreditMultiply() int64 {
	if x != nil {
		return x.CreditMultiply
	}
	return 0
}

type DaUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data           string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	AppId          string `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	DeviceId       string `protobuf:"bytes,3,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Type           string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	IsBlocked      string `protobuf:"bytes,5,opt,name=isBlocked,proto3" json:"isBlocked,omitempty"`
	Usage          int64  `protobuf:"varint,6,opt,name=usage,proto3" json:"usage,omitempty"`
	CreditMultiply int64  `protobuf:"varint,7,opt,name=creditMultiply,proto3" json:"creditMultiply,omitempty"`
}

func (x *DaUpdateRequest) Reset() {
	*x = DaUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaUpdateRequest) ProtoMessage() {}

func (x *DaUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaUpdateRequest.ProtoReflect.Descriptor instead.
func (*DaUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{1}
}

func (x *DaUpdateRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *DaUpdateRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *DaUpdateRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DaUpdateRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DaUpdateRequest) GetIsBlocked() string {
	if x != nil {
		return x.IsBlocked
	}
	return ""
}

func (x *DaUpdateRequest) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *DaUpdateRequest) GetCreditMultiply() int64 {
	if x != nil {
		return x.CreditMultiply
	}
	return 0
}

type DaUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DaUpdateReply) Reset() {
	*x = DaUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaUpdateReply) ProtoMessage() {}

func (x *DaUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaUpdateReply.ProtoReflect.Descriptor instead.
func (*DaUpdateReply) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{2}
}

type DaReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apps []*DeviceApp `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *DaReportRequest) Reset() {
	*x = DaReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaReportRequest) ProtoMessage() {}

func (x *DaReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaReportRequest.ProtoReflect.Descriptor instead.
func (*DaReportRequest) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{3}
}

func (x *DaReportRequest) GetApps() []*DeviceApp {
	if x != nil {
		return x.Apps
	}
	return nil
}

type DaReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DaReportReply) Reset() {
	*x = DaReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaReportReply) ProtoMessage() {}

func (x *DaReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaReportReply.ProtoReflect.Descriptor instead.
func (*DaReportReply) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{4}
}

type DaReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Offset   string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Count    string `protobuf:"bytes,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DaReadRequest) Reset() {
	*x = DaReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaReadRequest) ProtoMessage() {}

func (x *DaReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaReadRequest.ProtoReflect.Descriptor instead.
func (*DaReadRequest) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{5}
}

func (x *DaReadRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DaReadRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DaReadRequest) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

type DaReadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceApps []*DeviceApp `protobuf:"bytes,1,rep,name=deviceApps,proto3" json:"deviceApps,omitempty"`
}

func (x *DaReadReply) Reset() {
	*x = DaReadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaReadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaReadReply) ProtoMessage() {}

func (x *DaReadReply) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaReadReply.ProtoReflect.Descriptor instead.
func (*DaReadReply) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{6}
}

func (x *DaReadReply) GetDeviceApps() []*DeviceApp {
	if x != nil {
		return x.DeviceApps
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId        string `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Credit          int64  `protobuf:"varint,3,opt,name=credit,proto3" json:"credit,omitempty"`
	CreditTimeRatio int64  `protobuf:"varint,4,opt,name=creditTimeRatio,proto3" json:"creditTimeRatio,omitempty"`
	Supervisor      int64  `protobuf:"varint,5,opt,name=supervisor,proto3" json:"supervisor,omitempty"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceInfo) GetCredit() int64 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *DeviceInfo) GetCreditTimeRatio() int64 {
	if x != nil {
		return x.CreditTimeRatio
	}
	return 0
}

func (x *DeviceInfo) GetSupervisor() int64 {
	if x != nil {
		return x.Supervisor
	}
	return 0
}

type DiCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId        string `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Credit          int64  `protobuf:"varint,2,opt,name=credit,proto3" json:"credit,omitempty"`
	CreditTimeRatio int64  `protobuf:"varint,3,opt,name=creditTimeRatio,proto3" json:"creditTimeRatio,omitempty"`
	KidName         string `protobuf:"bytes,4,opt,name=kidName,proto3" json:"kidName,omitempty"`
}

func (x *DiCreateRequest) Reset() {
	*x = DiCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiCreateRequest) ProtoMessage() {}

func (x *DiCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiCreateRequest.ProtoReflect.Descriptor instead.
func (*DiCreateRequest) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{8}
}

func (x *DiCreateRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DiCreateRequest) GetCredit() int64 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *DiCreateRequest) GetCreditTimeRatio() int64 {
	if x != nil {
		return x.CreditTimeRatio
	}
	return 0
}

func (x *DiCreateRequest) GetKidName() string {
	if x != nil {
		return x.KidName
	}
	return ""
}

type DiCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceInfo *DeviceInfo `protobuf:"bytes,1,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
}

func (x *DiCreateReply) Reset() {
	*x = DiCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiCreateReply) ProtoMessage() {}

func (x *DiCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiCreateReply.ProtoReflect.Descriptor instead.
func (*DiCreateReply) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{9}
}

func (x *DiCreateReply) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type DiUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId        string `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Credit          int64  `protobuf:"varint,2,opt,name=credit,proto3" json:"credit,omitempty"`
	CreditTimeRatio int64  `protobuf:"varint,3,opt,name=creditTimeRatio,proto3" json:"creditTimeRatio,omitempty"`
	KidName         string `protobuf:"bytes,4,opt,name=kidName,proto3" json:"kidName,omitempty"`
}

func (x *DiUpdateRequest) Reset() {
	*x = DiUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiUpdateRequest) ProtoMessage() {}

func (x *DiUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiUpdateRequest.ProtoReflect.Descriptor instead.
func (*DiUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{10}
}

func (x *DiUpdateRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DiUpdateRequest) GetCredit() int64 {
	if x != nil {
		return x.Credit
	}
	return 0
}

func (x *DiUpdateRequest) GetCreditTimeRatio() int64 {
	if x != nil {
		return x.CreditTimeRatio
	}
	return 0
}

func (x *DiUpdateRequest) GetKidName() string {
	if x != nil {
		return x.KidName
	}
	return ""
}

type DiUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiUpdateReply) Reset() {
	*x = DiUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiUpdateReply) ProtoMessage() {}

func (x *DiUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiUpdateReply.ProtoReflect.Descriptor instead.
func (*DiUpdateReply) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{11}
}

type DiFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=DeviceId,proto3" json:"DeviceId,omitempty"`
}

func (x *DiFindRequest) Reset() {
	*x = DiFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiFindRequest) ProtoMessage() {}

func (x *DiFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiFindRequest.ProtoReflect.Descriptor instead.
func (*DiFindRequest) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{12}
}

func (x *DiFindRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type DiFindReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceInfo *DeviceInfo `protobuf:"bytes,1,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
}

func (x *DiFindReply) Reset() {
	*x = DiFindReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiFindReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiFindReply) ProtoMessage() {}

func (x *DiFindReply) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiFindReply.ProtoReflect.Descriptor instead.
func (*DiFindReply) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{13}
}

func (x *DiFindReply) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type DiReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Count  string `protobuf:"bytes,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DiReadRequest) Reset() {
	*x = DiReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiReadRequest) ProtoMessage() {}

func (x *DiReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiReadRequest.ProtoReflect.Descriptor instead.
func (*DiReadRequest) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{14}
}

func (x *DiReadRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DiReadRequest) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

type DiReadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceInfos []*DeviceInfo `protobuf:"bytes,1,rep,name=deviceInfos,proto3" json:"deviceInfos,omitempty"`
}

func (x *DiReadReply) Reset() {
	*x = DiReadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pixelprof_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiReadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiReadReply) ProtoMessage() {}

func (x *DiReadReply) ProtoReflect() protoreflect.Message {
	mi := &file_pixelprof_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiReadReply.ProtoReflect.Descriptor instead.
func (*DiReadReply) Descriptor() ([]byte, []int) {
	return file_pixelprof_proto_rawDescGZIP(), []int{15}
}

func (x *DiReadReply) GetDeviceInfos() []*DeviceInfo {
	if x != nil {
		return x.DeviceInfos
	}
	return nil
}

var File_pixelprof_proto protoreflect.FileDescriptor

var file_pixelprof_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x22, 0xc3, 0x01, 0x0a,
	0x09, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x79, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x22, 0x0f, 0x0a, 0x0d,
	0x44, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3b, 0x0a,
	0x0f, 0x44, 0x61, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x70, 0x70, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x61,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x59, 0x0a, 0x0d, 0x44,
	0x61, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x0b, 0x44, 0x61, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x0a,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x69,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x69, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x0d, 0x44, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x89, 0x01, 0x0a,
	0x0f, 0x44, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x69, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x69, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x0a, 0x0d, 0x44, 0x69, 0x46,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0b, 0x44, 0x69, 0x46, 0x69, 0x6e, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3d, 0x0a, 0x0d,
	0x44, 0x69, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x0b, 0x44,
	0x69, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x32, 0xcb, 0x01, 0x0a, 0x09, 0x44, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x40, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70,
	0x72, 0x6f, 0x66, 0x2e, 0x44, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x61, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x61, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x18, 0x2e,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x61, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70,
	0x72, 0x6f, 0x66, 0x2e, 0x44, 0x61, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x32, 0x87, 0x02, 0x0a, 0x09, 0x44, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x40, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f,
	0x66, 0x2e, 0x44, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70,
	0x72, 0x6f, 0x66, 0x2e, 0x44, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x04, 0x66, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f,
	0x66, 0x2e, 0x44, 0x69, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70,
	0x72, 0x6f, 0x66, 0x2e, 0x44, 0x69, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x44, 0x69,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x4c, 0x0a, 0x11, 0x69,
	0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x70, 0x72, 0x6f, 0x66,
	0x42, 0x0e, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x25, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e,
	0x67, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x70, 0x72, 0x6f, 0x66, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pixelprof_proto_rawDescOnce sync.Once
	file_pixelprof_proto_rawDescData = file_pixelprof_proto_rawDesc
)

func file_pixelprof_proto_rawDescGZIP() []byte {
	file_pixelprof_proto_rawDescOnce.Do(func() {
		file_pixelprof_proto_rawDescData = protoimpl.X.CompressGZIP(file_pixelprof_proto_rawDescData)
	})
	return file_pixelprof_proto_rawDescData
}

var file_pixelprof_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pixelprof_proto_goTypes = []interface{}{
	(*DeviceApp)(nil),       // 0: pixelprof.DeviceApp
	(*DaUpdateRequest)(nil), // 1: pixelprof.DaUpdateRequest
	(*DaUpdateReply)(nil),   // 2: pixelprof.DaUpdateReply
	(*DaReportRequest)(nil), // 3: pixelprof.DaReportRequest
	(*DaReportReply)(nil),   // 4: pixelprof.DaReportReply
	(*DaReadRequest)(nil),   // 5: pixelprof.DaReadRequest
	(*DaReadReply)(nil),     // 6: pixelprof.DaReadReply
	(*DeviceInfo)(nil),      // 7: pixelprof.DeviceInfo
	(*DiCreateRequest)(nil), // 8: pixelprof.DiCreateRequest
	(*DiCreateReply)(nil),   // 9: pixelprof.DiCreateReply
	(*DiUpdateRequest)(nil), // 10: pixelprof.DiUpdateRequest
	(*DiUpdateReply)(nil),   // 11: pixelprof.DiUpdateReply
	(*DiFindRequest)(nil),   // 12: pixelprof.DiFindRequest
	(*DiFindReply)(nil),     // 13: pixelprof.DiFindReply
	(*DiReadRequest)(nil),   // 14: pixelprof.DiReadRequest
	(*DiReadReply)(nil),     // 15: pixelprof.DiReadReply
}
var file_pixelprof_proto_depIdxs = []int32{
	0,  // 0: pixelprof.DaReportRequest.apps:type_name -> pixelprof.DeviceApp
	0,  // 1: pixelprof.DaReadReply.deviceApps:type_name -> pixelprof.DeviceApp
	7,  // 2: pixelprof.DiCreateReply.deviceInfo:type_name -> pixelprof.DeviceInfo
	7,  // 3: pixelprof.DiFindReply.deviceInfo:type_name -> pixelprof.DeviceInfo
	7,  // 4: pixelprof.DiReadReply.deviceInfos:type_name -> pixelprof.DeviceInfo
	1,  // 5: pixelprof.DaService.update:input_type -> pixelprof.DaUpdateRequest
	3,  // 6: pixelprof.DaService.report:input_type -> pixelprof.DaReportRequest
	5,  // 7: pixelprof.DaService.read:input_type -> pixelprof.DaReadRequest
	8,  // 8: pixelprof.DiService.create:input_type -> pixelprof.DiCreateRequest
	10, // 9: pixelprof.DiService.update:input_type -> pixelprof.DiUpdateRequest
	12, // 10: pixelprof.DiService.find:input_type -> pixelprof.DiFindRequest
	14, // 11: pixelprof.DiService.read:input_type -> pixelprof.DiReadRequest
	2,  // 12: pixelprof.DaService.update:output_type -> pixelprof.DaUpdateReply
	4,  // 13: pixelprof.DaService.report:output_type -> pixelprof.DaReportReply
	6,  // 14: pixelprof.DaService.read:output_type -> pixelprof.DaReadReply
	9,  // 15: pixelprof.DiService.create:output_type -> pixelprof.DiCreateReply
	11, // 16: pixelprof.DiService.update:output_type -> pixelprof.DiUpdateReply
	13, // 17: pixelprof.DiService.find:output_type -> pixelprof.DiFindReply
	15, // 18: pixelprof.DiService.read:output_type -> pixelprof.DiReadReply
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_pixelprof_proto_init() }
func file_pixelprof_proto_init() {
	if File_pixelprof_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pixelprof_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaReadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiFindReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pixelprof_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiReadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pixelprof_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pixelprof_proto_goTypes,
		DependencyIndexes: file_pixelprof_proto_depIdxs,
		MessageInfos:      file_pixelprof_proto_msgTypes,
	}.Build()
	File_pixelprof_proto = out.File
	file_pixelprof_proto_rawDesc = nil
	file_pixelprof_proto_goTypes = nil
	file_pixelprof_proto_depIdxs = nil
}
