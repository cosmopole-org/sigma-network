{"version":3,"file":"worker.js","sources":["../../output/worker-thread/nodes.js","../../output/worker-thread/strings.js","../../output/worker-thread/MutationTransfer.js","../../output/worker-thread/phase.js","../../output/worker-thread/MutationObserver.js","../../output/worker-thread/dom/ParentNode.js","../../output/utils.js","../../output/worker-thread/dom/DOMTokenList.js","../../output/third_party/html-parser/html-parser.js","../../output/worker-thread/dom/elementSibling.js","../../output/worker-thread/dom/Element.js","../../output/worker-thread/serializeTransferrableObject.js","../../output/worker-thread/canvas/canvas-utils.js","../../output/worker-thread/Storage.js","../../output/worker-thread/dom/matchElements.js","../../output/worker-thread/dom/Node.js","../../output/worker-thread/dom/Attr.js","../../output/worker-thread/css/CSSStyleDeclaration.js","../../output/worker-thread/dom/enhanceElement.js","../../output/worker-thread/Event.js","../../output/transfer/TransferrableNodes.js","../../output/worker-thread/dom/HTMLElement.js","../../output/worker-thread/dom/SVGElement.js","../../output/worker-thread/dom/HTMLAnchorElement.js","../../output/worker-thread/dom/HTMLButtonElement.js","../../output/worker-thread/canvas/CanvasGradient.js","../../output/worker-thread/canvas/CanvasPattern.js","../../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../../output/worker-thread/canvas/CanvasRenderingContext2D.js","../../output/worker-thread/dom/HTMLCanvasElement.js","../../output/worker-thread/dom/HTMLDataElement.js","../../output/worker-thread/dom/HTMLEmbedElement.js","../../output/worker-thread/dom/HTMLFormControlsMixin.js","../../output/worker-thread/dom/HTMLFieldSetElement.js","../../output/worker-thread/dom/HTMLFormElement.js","../../output/worker-thread/dom/HTMLIFrameElement.js","../../output/worker-thread/dom/HTMLImageElement.js","../../output/worker-thread/dom/HTMLInputLabelsMixin.js","../../output/worker-thread/dom/HTMLInputElement.js","../../output/worker-thread/dom/HTMLTextAreaElement.js","../../output/worker-thread/dom/HTMLLabelElement.js","../../output/worker-thread/dom/HTMLLinkElement.js","../../output/worker-thread/dom/HTMLMapElement.js","../../output/worker-thread/dom/HTMLMeterElement.js","../../output/worker-thread/dom/HTMLModElement.js","../../output/worker-thread/dom/HTMLOListElement.js","../../output/worker-thread/dom/HTMLOptionElement.js","../../output/worker-thread/dom/HTMLProgressElement.js","../../output/worker-thread/dom/HTMLQuoteElement.js","../../output/worker-thread/dom/HTMLScriptElement.js","../../output/worker-thread/dom/HTMLSelectElement.js","../../output/worker-thread/dom/HTMLSourceElement.js","../../output/worker-thread/dom/HTMLStyleElement.js","../../output/worker-thread/dom/HTMLTableCellElement.js","../../output/worker-thread/dom/HTMLTableColElement.js","../../output/worker-thread/dom/HTMLTableElement.js","../../output/worker-thread/dom/HTMLTableRowElement.js","../../output/worker-thread/dom/HTMLTableSectionElement.js","../../output/worker-thread/dom/HTMLTimeElement.js","../../output/worker-thread/dom/HTMLHeadElement.js","../../output/worker-thread/dom/HTMLDataListElement.js","../../output/worker-thread/dom/CharacterData.js","../../output/worker-thread/dom/Text.js","../../output/worker-thread/dom/Comment.js","../../output/worker-thread/dom/DocumentFragment.js","../../output/worker-thread/dom/Document.js","../../output/worker-thread/SyncValuePropagation.js","../../output/worker-thread/ResizePropagation.js","../../output/worker-thread/AnimationFrame.js","../../output/worker-thread/index.js","../../output/worker-thread/initialize.js","../../output/worker-thread/initialize-storage.js"],"sourcesContent":["import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Initializing */) {\n        mapping.set((node[7 /* index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* index */] !== undefined) {\n        return node[7 /* index */];\n    }\n    mapping.set((node[7 /* index */] = ++count), node);\n    if (phase > 0 /* Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Initializing */ && document[58 /* allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* phase */]: phase,\n                    [12 /* type */]: phase === 2 /* Mutating */ ? 3 /* MUTATE */ : 2 /* HYDRATE */,\n                    [37 /* nodes */]: nodes,\n                    [41 /* strings */]: consumeStrings(),\n                    [36 /* mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","export let phase = 0 /* Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* index */] === target[7 /* index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","import { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","export const toLower = (value) => value.toLowerCase();\nexport const toUpper = (value) => value.toUpperCase();\nexport const containsIndexOf = (pos) => pos !== -1;\nexport const keyValueString = (key, value) => `${key}=\"${value}\"`;\n//# sourceMappingURL=utils.js.map","import { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* tokens */] = [];\n    [13 /* target */];\n    [18 /* attributeName */];\n    [44 /* storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* target */] = target;\n        this[18 /* attributeName */] = attributeName;\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...Array.from(new Set(this[43 /* tokens */].concat(tokens))));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...Array.from(new Set(this[43 /* tokens */].filter((token) => !tokens.includes(token)))));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...Array.from(set));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* mutated */](oldValue, value) {\n        this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, this[18 /* attributeName */], value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: this[18 /* attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString(this[18 /* attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","export function getPreviousElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) - 1; i >= 0; i--) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\nexport function getNextElementSibling(node) {\n    let parentNodes = node.parentNode && node.parentNode.childNodes;\n    if (!parentNodes) {\n        return null;\n    }\n    for (let i = parentNodes.indexOf(node) + 1; i < parentNodes.length; i++) {\n        let node = parentNodes[i];\n        if (node.nodeType === 1 /* ELEMENT_NODE */) {\n            return node;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=elementSibling.js.map","import { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* propertyBackedAttributes */]);\n    defineOn[46 /* propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    namespaceURI;\n    style_;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* creationFormat */] = [\n            this[7 /* index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // We lazily instantiate the CSSStyleDeclaration to keep element creation cheap\n    // See https://github.com/ampproject/worker-dom/pull/1096 for context.\n    get style() {\n        if (!this.style_) {\n            this.style_ = new CSSStyleDeclaration(this);\n        }\n        return this.style_;\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[7 /* index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* ATTRIBUTES */,\n                this[7 /* index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 6 /* GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* target */][0] === this[7 /* index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* GET_BOUNDING_CLIENT_RECT */, this[7 /* index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* SCROLL_INTO_VIEW */, this[7 /* index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","import { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","import { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* type */] === 10 /* IMAGE_BITMAP_INSTANCE */ && data[73 /* callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* IMAGE_BITMAP_INSTANCE */, image[7 /* index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* STORAGE */, 2 /* SET */, location, store(key) + 1, store(stringValue) + 1]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                store(key) + 1,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","import { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* index */];\n    [9 /* transferredFormat */];\n    [8 /* creationFormat */];\n    [10 /* handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* scopingRoot */] = this;\n        if (process.env.SERVER) {\n            return;\n        }\n        this[7 /* index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* transferredFormat */] = [this[7 /* index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                referenceNode[7 /* index */],\n                0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* scopingRoot */, this[45 /* scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                0,\n                previousSibling ? previousSibling[7 /* index */] : 0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [2 /* CHILD_LIST */, this[7 /* index */], 0, 0, 0, 1, child[7 /* index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* removedNode */](oldChild);\n        this[56 /* insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* index */],\n            oldChild[7 /* index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* EVENT_SUBSCRIPTION */,\n            this[7 /* index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* EVENT_SUBSCRIPTION */,\n                this[7 /* index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* handlers */] && target[10 /* handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n    getBoundingClientRect() {\n        return {\n            width: 0,\n            height: 0,\n            left: 0,\n            top: 0\n        };\n    }\n}\n//# sourceMappingURL=Node.js.map","import { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","import { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* properties */] = {};\n    [44 /* storeAttribute */];\n    [13 /* target */];\n    constructor(target) {\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n        this[13 /* target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, 'style', value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","import { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","/**\n * @fileoverview\n * WorkerDOM's `Event` class. `CustomEvent` is available natively in web worker.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* stop */] = false;\n    [51 /* end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* end */] = this[50 /* stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* target */] !== null) {\n        const index = event[13 /* target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 1 /* EVENT */) {\n            return;\n        }\n        const event = data[39 /* event */];\n        const node = get(event[7 /* index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* type */], {\n                bubbles: event[25 /* bubbles */],\n                cancelable: event[26 /* cancelable */],\n            }), {\n                cancelBubble: event[27 /* cancelBubble */],\n                defaultPrevented: event[29 /* defaultPrevented */],\n                eventPhase: event[30 /* eventPhase */],\n                isTrusted: event[31 /* isTrusted */],\n                returnValue: event[32 /* returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* timeStamp */],\n                scoped: event[34 /* scoped */],\n                keyCode: event[35 /* keyCode */],\n                pageX: event[60 /* pageX */],\n                pageY: event[61 /* pageY */],\n                offsetX: event[65 /* offsetX */],\n                offsetY: event[66 /* offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","export const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=TransferrableNodes.js.map","import { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                this.addEventListener(normalizedKey, value);\n                this[76 /* propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [7 /* HTMLElement */, this[7 /* index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","import { Element, registerSubclass } from './Element';\nimport { SVG_NAMESPACE } from '../../transfer/TransferrableNodes';\nexport class SVGElement extends Element {\n    constructor(nodeType, localName, namespaceURI, ownerDocument) {\n        super(nodeType, localName, SVG_NAMESPACE, ownerDocument);\n        // Element uppercases its nodeName, but SVG elements don't.\n        this.nodeName = localName;\n    }\n}\nregisterSubclass('svg', SVGElement, SVG_NAMESPACE);\n//# sourceMappingURL=SVGElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","import { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [6 /* CanvasRenderingContext2D */, this.canvasElement[7 /* index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* mutated */]('strokeRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","import { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* patternImplementation */] = {};\n    [71 /* patternUpgraded */] = false;\n    [72 /* patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* patternImplementation */] = pattern;\n            this[71 /* patternUpgraded */] = true;\n        });\n        return this[72 /* patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 9 /* OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* target */][0] === canvas[7 /* index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","import { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","import { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","import { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","import { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* value */] = '';\n    dirtyValue = false;\n    [47 /* checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('value'),\n            0 /* FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* checked */];\n    }\n    set checked(value) {\n        if (this[47 /* checked */] === value) {\n            return;\n        }\n        this[47 /* checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('checked'),\n            1 /* TRUE */,\n            value === true ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLTextAreaElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* value */] = '';\n    dirtyValue = false;\n    [47 /* checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('value'),\n            0 /* FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* checked */];\n    }\n    set checked(value) {\n        if (this[47 /* checked */] === value) {\n            return;\n        }\n        this[47 /* checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('checked'),\n            1 /* TRUE */,\n            value === true ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('textarea', HTMLTextAreaElement);\nHTMLInputLabelsMixin(HTMLTextAreaElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLTextAreaElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLTextAreaElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('selected'),\n            1 /* TRUE */,\n            this[52 /* selected */] ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* indeterminate */] = true;\n    [21 /* value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* value */];\n    }\n    set value(value) {\n        this[48 /* indeterminate */] = false;\n        this[21 /* value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* size */] = -1 /* UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* insertedNode */](child) {\n        super[56 /* insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        super[57 /* removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* size */] === -1 /* UNMODIFIED */\n            ? this.multiple\n                ? 4 /* MULTIPLE */\n                : 1 /* SINGLE */\n            : this[49 /* size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* size */] = size > 0 ? size : this.multiple ? 4 /* MULTIPLE */ : 1 /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* MULTIPLE */ : \"select-multiple\" /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLHeadElement extends HTMLElement {\n}\nregisterSubclass('head', HTMLHeadElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLHeadElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLHeadElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","import { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { getNextElementSibling, getPreviousElementSibling } from './elementSibling';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* data */] = data;\n        this[8 /* creationFormat */] = [this[7 /* index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* CHARACTER_DATA */, this[7 /* index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/previousElementSibling\n     * Returns the Element immediately prior to the specified one in its parent's children list,\n     * or null if the specified element is the first one in the list.\n     */\n    get previousElementSibling() {\n        return getPreviousElementSibling(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling\n     * Returns the Element immediately following the specified one in its parent's children list,\n     * or null if the specified element is the last one in the list.\n     */\n    get nextElementSibling() {\n        return getNextElementSibling(this);\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","import { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* creationFormat */] = [this[7 /* index */], 11 /* DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","import { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    head;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* observe */]() {\n        setPhase(1 /* Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* nodeType */]) {\n            case 3 /* TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            case 8 /* COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* index */]);\n                (skeleton[2 /* attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* childNodes */] || []).forEach((child) => node.appendChild(this[64 /* hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        let el = matchChildElement(this.head, (element) => element.id === id);\n        if (el) {\n            return el;\n        }\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","import { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 4 /* SYNC */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        const node = get(sync[7 /* index */]);\n        if (node) {\n            node.ownerDocument[58 /* allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* value */];\n            node.ownerDocument[58 /* allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","export function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 5 /* RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","const frameDuration = 1000 / 60;\nlet last = 0;\nlet id = 0;\nlet queue = [];\n/**\n * Schedules the accumulated callbacks to be fired 16ms after the last round.\n */\nfunction scheduleNext() {\n    const now = Date.now();\n    const next = Math.round(Math.max(0, frameDuration - (Date.now() - last)));\n    last = now + next;\n    setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n            if (cp[i].cancelled) {\n                continue;\n            }\n            try {\n                cp[i].callback(last);\n            }\n            catch (e) {\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n    }, next);\n}\nexport function rafPolyfill(callback) {\n    if (queue.length === 0) {\n        scheduleNext();\n    }\n    if (id === Number.MAX_SAFE_INTEGER) {\n        id = 0;\n    }\n    queue.push({\n        handle: ++id,\n        callback,\n        cancelled: false,\n    });\n    return id;\n}\nexport function cafPolyfill(handle) {\n    for (let i = 0; i < queue.length; i++) {\n        if (queue[i].handle === handle) {\n            queue[i].cancelled = true;\n            return;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrame.js.map","import { HTMLElement } from './dom/HTMLElement';\nimport { SVGElement } from './dom/SVGElement';\nimport { HTMLAnchorElement } from './dom/HTMLAnchorElement';\nimport { HTMLButtonElement } from './dom/HTMLButtonElement';\nimport { HTMLCanvasElement } from './dom/HTMLCanvasElement';\nimport { HTMLDataElement } from './dom/HTMLDataElement';\nimport { HTMLEmbedElement } from './dom/HTMLEmbedElement';\nimport { HTMLFieldSetElement } from './dom/HTMLFieldSetElement';\nimport { HTMLFormElement } from './dom/HTMLFormElement';\nimport { HTMLIFrameElement } from './dom/HTMLIFrameElement';\nimport { HTMLImageElement } from './dom/HTMLImageElement';\nimport { HTMLInputElement } from './dom/HTMLInputElement';\nimport { HTMLTextAreaElement } from './dom/HTMLTextAreaElement';\nimport { HTMLLabelElement } from './dom/HTMLLabelElement';\nimport { HTMLLinkElement } from './dom/HTMLLinkElement';\nimport { HTMLMapElement } from './dom/HTMLMapElement';\nimport { HTMLMeterElement } from './dom/HTMLMeterElement';\nimport { HTMLModElement } from './dom/HTMLModElement';\nimport { HTMLOListElement } from './dom/HTMLOListElement';\nimport { HTMLOptionElement } from './dom/HTMLOptionElement';\nimport { HTMLProgressElement } from './dom/HTMLProgressElement';\nimport { HTMLQuoteElement } from './dom/HTMLQuoteElement';\nimport { HTMLScriptElement } from './dom/HTMLScriptElement';\nimport { HTMLSelectElement } from './dom/HTMLSelectElement';\nimport { HTMLSourceElement } from './dom/HTMLSourceElement';\nimport { HTMLStyleElement } from './dom/HTMLStyleElement';\nimport { HTMLTableCellElement } from './dom/HTMLTableCellElement';\nimport { HTMLTableColElement } from './dom/HTMLTableColElement';\nimport { HTMLTableElement } from './dom/HTMLTableElement';\nimport { HTMLTableRowElement } from './dom/HTMLTableRowElement';\nimport { HTMLTableSectionElement } from './dom/HTMLTableSectionElement';\nimport { HTMLTimeElement } from './dom/HTMLTimeElement';\nimport { HTMLHeadElement } from './dom/HTMLHeadElement';\nimport { Document } from './dom/Document';\nimport { initialize } from './initialize';\nimport { MutationObserver } from './MutationObserver';\nimport { Event as WorkerDOMEvent } from './Event';\nimport { Text } from './dom/Text';\nimport { HTMLDataListElement } from './dom/HTMLDataListElement';\nimport { CharacterData } from './dom/CharacterData';\nimport { Comment } from './dom/Comment';\nimport { DOMTokenList } from './dom/DOMTokenList';\nimport { DocumentFragment } from './dom/DocumentFragment';\nimport { Element } from './dom/Element';\nimport { rafPolyfill, cafPolyfill } from './AnimationFrame';\nconst globalScope = {\n    innerWidth: 0,\n    innerHeight: 0,\n    CharacterData,\n    Comment,\n    DOMTokenList,\n    Document,\n    DocumentFragment,\n    Element,\n    HTMLAnchorElement,\n    HTMLButtonElement,\n    HTMLCanvasElement,\n    HTMLDataElement,\n    HTMLDataListElement,\n    HTMLElement,\n    HTMLEmbedElement,\n    HTMLFieldSetElement,\n    HTMLFormElement,\n    HTMLIFrameElement,\n    HTMLImageElement,\n    HTMLInputElement,\n    HTMLTextAreaElement,\n    HTMLHeadElement,\n    HTMLLabelElement,\n    HTMLLinkElement,\n    HTMLMapElement,\n    HTMLMeterElement,\n    HTMLModElement,\n    HTMLOListElement,\n    HTMLOptionElement,\n    HTMLProgressElement,\n    HTMLQuoteElement,\n    HTMLScriptElement,\n    HTMLSelectElement,\n    HTMLSourceElement,\n    HTMLStyleElement,\n    HTMLTableCellElement,\n    HTMLTableColElement,\n    HTMLTableElement,\n    HTMLTableRowElement,\n    HTMLTableSectionElement,\n    HTMLTimeElement,\n    SVGElement,\n    Text,\n    Event: WorkerDOMEvent,\n    MutationObserver,\n    requestAnimationFrame: self.requestAnimationFrame || rafPolyfill,\n    cancelAnimationFrame: self.cancelAnimationFrame || cafPolyfill,\n};\nconst noop = () => void 0;\n// WorkerDOM.Document.defaultView ends up being the window object.\n// React requires the classes to exist off the window object for instanceof checks.\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new Document(globalScope);\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    // TODO(choumx): Remove once defaultView contains all native worker globals.\n    // Canvas's use of native OffscreenCanvas checks the existence of the property\n    // on the WorkerDOMGlobalScope.\n    globalScope.OffscreenCanvas = self['OffscreenCanvas'];\n    globalScope.ImageBitmap = self['ImageBitmap'];\n    document.isConnected = true;\n    document.body = document.createElement('body');\n    document.head = document.createElement('head');\n    document.body.appendChild(document.head);\n    document.appendChild(document.body);\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\nexport const hydrate = initialize;\n//# sourceMappingURL=index.js.map","import { store as storeString } from './strings';\nimport { appendKeys as addCssKeys } from './css/CSSStyleDeclaration';\nimport { appendGlobalEventProperties } from './dom/HTMLElement';\nimport { initializeStorage } from './initialize-storage';\nexport function initialize(document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, [innerWidth, innerHeight], localStorageInit, sessionStorageInit) {\n    addCssKeys(cssKeys);\n    appendGlobalEventProperties(globalEventHandlerKeys);\n    strings.forEach(storeString);\n    (hydrateableNode[4 /* childNodes */] || []).forEach((child) => document.body.appendChild(document[64 /* hydrateNode */](strings, child)));\n    const window = document.defaultView;\n    window.innerWidth = innerWidth;\n    window.innerHeight = innerHeight;\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n}\n//# sourceMappingURL=initialize.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map"],"names":["get","index","mapping","store","value","has","set","count","transfer","push","document","mutation","phase","pending","pendingMutations","concat","Promise","resolve","then","_","nodes","buffer","Uint16Array","consumeNodes","reduce","acc","node","mutations","postMessage","_defineProperty","mutate","record","transferable","observers","forEach","observer","t","target","parentNode","observerTarget","pushMutation","_querySelectorAll","querySelectorAll","selector","selectorBracketIndexes","indexOf","selectorHasAttr","elementSelector","substring","attrSelector","matcher","element","matchAttrReference","id","substr","classList","contains","localName","toLowerCase","matchChildrenElements","filter","d","synchronizedAccessor","defineOn","accessorKey","propertyName","Object","defineProperty","prototype","enumerable","configurable","this","decodeEntities","html","replace","s","numericEntity","namedEntity","code","charAt","parseInt","isNaN","String","fromCodePoint","RESERVED_CHARACTERS","getPreviousElementSibling","parentNodes","childNodes","i","nodeType","a","getNextElementSibling","length","definePropertyBackedAttributes","attributes","sub","create","assign","serializeTransferrableObject","args","serialized","arg","u16","num","f32","c","Array","isArray","serializedArray","_typeof","Error","serializedObject","b","retrieveImageBitmap","image","canvas","callIndex","indexTracker","ownerDocument","messageHandler","_messageHandler","_ref","data","removeGlobalEventListener","addGlobalEventListener","createStorage","location","storage","define","keys","n","key","stringValue","_this","ElementKind","tagNameConditionPredicate","tagNames","includes","tagName","elementPredicate","_matchChildrenElements","conditionPredicate","matchingElements","child","apply","_toConsumableArray","matchChildElement","_matchChildElement","returnValue","children","some","grandChildMatch","matchNearestParent","equalPos","selectorLength","caseInsensitive","endPos","equalSuffix","attrString","possibleSuffixes","rawValue","rawAttrValue","getAttribute","casedValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","Map","pushRecord","Ka","callback","takeRecords","MutationObserver","_classCallCheck","options","observe","disconnect","splice","records","propagate","_propagate","property","Node","_createClass","nodeName","overrideIndex","isConnected","storeOverrideNodeMapping","Math","max","undefined","storeNodeMapping","getTextContent","textContent","childNode","parentChildNodes","hasChildNodes","otherNode","insertBefore","referenceNode","slice","appendChild","remove","addedNodes","nextSibling","type","previousSibling","removeChild","removedNodes","replaceChild","newChild","oldChild","replaceWith","parent","_len","arguments","_key","nodeIterator","currentNode","createTextNode","addEventListener","handler","lowerType","storedType","storeString","handlers","g","ParentNode","_Node","_callSuper","_inherits","find","querySelector","matches","WHITESPACE_REGEX","DOMTokenList","attributeName","bind","join","collection","_this$","oldValue","newValue","trim","item","token","add","_this$2","tokens","from","Set","_this$3","_len2","_key2","newToken","_this$4","delete","toggle","force","test","TypeError","namespaceURI","toString","map","attr","name","matchPredicate","CSSStyleDeclaration","getPropertyValue","removeProperty","mutated","cssText","setProperty","values","reflectProperties","properties","pair","_loop","_pair$property","defaultValue","_pair$property$","toLower","keywords","isBooleanAttribute","attributeValue","castableValue","Number","setAttribute","removeAttribute","kMarkupPattern","kAttributePattern","kSelfClosingElements","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","kElementsClosedByOpening","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","kElementsClosedByClosing","A","B","I","kBlockTextElements","SCRIPT","NOSCRIPT","STYLE","__proto__","amp","lt","gt","quot","Event","opts","scoped","timeStamp","isTrusted","eventPhase","defaultPrevented","currentTarget","cancelBubble","cancelable","bubbles","changedTouches","touches","offsetY","offsetX","pageY","pageX","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","touchListFromTransfer","event","touchListKeys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","e","NS_NAME_TO_CLASS","registerSubclass","subclass","HTML_NAMESPACE","VOID_ELEMENTS","Element","_ParentNode","toUpperCase","_classList","style_","kind","VOID","NORMAL","tag","start","attrsToString","contents","innerHTML","outerHTML","_this2","root","parse","rootElement","match","currentParent","createElementNS","currentNamespace","stack","lastTextPos","tagsClosed","SVG_NAMESPACE","exec","commentContents","beginningSlash","matchAttributes","endSlash","text","lastIndex","createComment","normalizedTagName","pop","childToAppend","attMatch","closeMarkup","_i","wrapper","firstChild","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","valueAsString","propertyBacked","constructor","matchAttrPredicate","attributeNamespace","f","findIndex","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","getElementsByName","stringName","cloneNode","deep","clone","getBoundingClientRectAsync","_this3","left","top","right","bottom","x","y","width","height","transferredBoundingClientRect","setTimeout","click","dispatchEvent","scrollIntoView","class","el","style","appendGlobalEventProperties","HTMLElement","_Element","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","SVGElement","HTMLAnchorElement","_HTMLElement","_relList","href","rel","relList","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","Float32Array","CanvasGradient","addColorStop","offset","color","call","CanvasPattern","setTransform","OffscreenCanvasPolyfill","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","objectIndex","canvasElement","lineDash","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","h","fillRect","strokeRect","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","scale","beginPath","strokeText","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","createRadialGradient","r0","r1","createPattern","repetition","patternId","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","FakeNativeCanvasPattern","instance","pattern","deferredUpgrades","WeakMap","CanvasRenderingContext2DShim","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvas","defaultView","getOffscreenCanvasAsync","deferred","isTestMode","upgradePromise","maybeUpgradeImplementation","degradeImplementation","flushQueue","_step","_iterator","_createForOfIteratorHelper","done","isSetter","err","delegateFunc","_this$implementation","delegateSetter","delegateGetter","segments","_this4","ImageBitmap","fakePattern","_this5","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","HTMLCanvasElement","HTMLDataElement","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFormControlsCollectionMixin","HTMLFieldSetElement","HTMLFormElement","elements","method","action","enctype","acceptCharset","autocomplete","autocapitalize","HTMLIFrameElement","_sandbox","sandbox","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","HTMLInputLabelsMixin","for","HTMLInputElement","dirtyValue","date","stringToDate","getTime","Date","dateToString","NaN","getFullYear","m","getMonth","getDate","str","components","_components","_slicedToArray","accept","defaultChecked","dirName","formEncType","maxLength","min","multiple","placeholder","readOnly","required","size","step","HTMLTextAreaElement","HTMLLabelElement","htmlFor","getElementById","HTMLLinkElement","as","HTMLMapElement","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","HTMLOListElement","reversed","HTMLOptionElement","label","selected","defaultSelected","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","HTMLSelectElement","_superPropGet","firstSelectedChild","selectedIndex","HTMLSourceElement","HTMLStyleElement","HTMLTableCellElement","_headers","headers","abbr","colSpan","rowSpan","scope","HTMLTableColElement","span","removeElement","insertBeforeElementsWithTagName","insertBeforeElement","HTMLTableElement","newElement","caption","firstElementChild","tHead","tFoot","TABLE_SECTION_TAGNAMES","indexInAncestor","isValidAncestor","rows","HTMLTableRowElement","deleteCell","cell","cells","insertCell","td","createElement","HTMLTableSectionElement","deleteRow","insertRow","tr","HTMLTimeElement","dateTime","HTMLHeadElement","HTMLDataListElement","CharacterData","Text","_CharacterData","nodeValue","splitText","remainderTextNode","insertBeforePosition","Comment","DocumentFragment","createDocumentFragment","Document","global","DOCUMENT_NAME","documentElement","head","body","removeEventListener","newPhase","propagate$2","l","F","targetFromTransfer","keyCode","propagate$1","sync","innerWidth","innerHeight","propagateResize","strings","skeleton","attribute","createEvent","frameDuration","last","globalScope","WorkerDOMEvent","requestAnimationFrame","self","rafPolyfill","scheduleNext","now","next","round","cp","cancelled","MAX_SAFE_INTEGER","handle","cancelAnimationFrame","cafPolyfill","noop","workerDOM","initialize","hydrateableNode","cssKeys","globalEventHandlerKeys","localStorageInit","sessionStorageInit","_ref2","appendKeys","keysToAppend","hasOwnProperty","previousPrototypeLength","writable","hyphenatedKey","defineProperties","addCssKeys","normalizedKey","stored","window","initializeStorage","localStorage","sessionStorage"],"mappings":"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"}