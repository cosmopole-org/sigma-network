
syntax = "proto3";

option go_package = "google.golang.org/grpc/sigma_grpc";
option java_multiple_files = true;
option java_package = "io.grpc.sigma";
option java_outer_classname = "SigmaProto";

package sigma;

// service

service AdminService {
  rpc updatePass (AdminUpdatePassDto) returns (AdminUpdatePassOutput) {}
  rpc signin (AdminSigninDto) returns (AdminSigninOutput) {}
}

// messages

message AdminUpdatePassDto {
	string password = 1;
}

message AdminUpdatePassOutput {}

message AdminSigninDto {
	string email = 1;
	string password = 2;
}

message AdminSigninOutput {
	string token = 1;
}

// service

service HumanService {
  rpc authenticate (HumanAuthenticateDto) returns (HumanAuthenticateOutput) {}
  rpc signup (HumanSignupDto) returns (HumanSignupOutput) {}
  rpc verify (HumanVerifyDto) returns (HumanVerifyOutput) {}
  rpc complete (HumanCompleteDto) returns (HumanCompleteOutput) {}
  rpc update (HumanUpdateDto) returns (HumanUpdateOutput) {}
  rpc get (HumanGetDto) returns (HumanGetOutput) {}
}

// models

message Human {
	int64 id = 1;
  	string email = 2;
	string firstName = 3;
	string lastName = 4;
}

message Pending {
	int64 id = 1;
	string email = 2;
	string verifyCode = 3;
	string clientCode = 4;
	string state = 5;     
}

message Session {
	int64 id = 1;
	int64 userId = 2;
	int32 creatureType = 3;
	string token = 4;
}

// messages

message HumanAuthenticateDto {
	string token = 1;
}

message HumanAuthenticateOutput {
	bool authenticated = 1;
	Human me = 2;
}

message HumanSignupDto {
	string email = 1;
}

message HumanSignupOutput {
	Pending pending = 1;
}

message HumanVerifyDto {
	string verifyCode = 1;
	string clientCode = 2;
}
  
message HumanVerifyOutput {
	Pending pending = 1;
	Human human = 2;
	Session session = 3;
}

message HumanCompleteDto {
	string verifyCode = 1;
	string clientCode = 2;
	string firstName = 3;
	string lastName = 4;
}
  
message HumanCompleteOutput {
	Human human = 2;
	Session session = 3;
}

message HumanUpdateDto {
	string firstName = 1;
	string lastName = 2;
}
  
message HumanUpdateOutput {
	Human human = 1;
}

message HumanGetDto {
	string userId = 1;
}

message HumanGetOutput {
	Human human = 1;
}

// service

service TowerService {
	rpc create (TowerCreateDto) returns (TowerCreateOutput) {}
	rpc update (TowerUpdateDto) returns (TowerUpdateOutput) {}
	rpc delete (TowerDeleteDto) returns (TowerDeleteOutput) {}
	rpc get (TowerGetDto) returns (TowerGetOutput) {}
	rpc join (TowerJoinDto) returns (TowerJoinOutput) {}
}
  
// models

message Tower {
	int64 id = 1;
  	string name = 2;
	int64 avatarId = 3;
	bool isPublic = 4;
	int64 creatorId = 5;
}

message Member {
	int64 id = 1;
	int64 humanId = 2;
	int64 towerId = 3;
}

// messages

message TowerCreateDto {
	string name = 1;
	int64 avatarId = 2;
	bool isPublic = 3;
}

message TowerCreateOutput {
	Tower tower = 1;
	Member member = 2;
}

message TowerUpdateDto {
	int64 towerId = 1;
	string name = 2;
	int64 avatarId = 3;
	bool isPublic = 4;
}

message TowerUpdateOutput {
	Tower tower = 1;
}

message TowerDeleteDto {
	int64 towerId = 1;
}

message TowerDeleteOutput {}

message TowerGetDto {
	string towerId = 1;
}

message TowerGetOutput {
	Tower tower = 1;
}

message TowerJoinDto {
	int64 towerId = 1;
}

message TowerJoinOutput {
	Member member = 1;
}

// service

service RoomService {
	rpc create (RoomCreateDto) returns (RoomCreateOutput) {}
	rpc update (RoomUpdateDto) returns (RoomUpdateOutput) {}
	rpc delete (RoomDeleteDto) returns (RoomDeleteOutput) {}
	rpc get (RoomGetDto) returns (RoomGetOutput) {}
}
  
// models

message Room {
	int64 id = 1;
  	string name = 2;
	int64 avatarId = 3;
	int64 towerId = 4;
}

// messages

message RoomCreateDto {
	string name = 1;
	int64 avatarId = 2;
}

message RoomCreateOutput {
	Room room = 1;
}

message RoomUpdateDto {
	int64 roomId = 1;
	string name = 2;
	int64 avatarId = 3;
}

message RoomUpdateOutput {
	Room room = 1;
}

message RoomDeleteDto {
	int64 roomId = 1;
}

message RoomDeleteOutput {}

message RoomGetDto {
	string roomId = 1;
}

message RoomGetOutput {
	Room room = 1;
}

// service

service InviteService {
	rpc create (InviteCreateDto) returns (InviteCreateOutput) {}
	rpc update (InviteCancelDto) returns (InviteCancelOutput) {}
	rpc delete (InviteAcceptDto) returns (InviteAcceptOutput) {}
	rpc get (InviteDeclineDto) returns (InviteDeclineOutput) {}
}
  
// models

message Invite {
	int64 id = 1;
	int64 humanId = 2;
	int64 towerId = 3;
}

// messages

message InviteCreateDto {
	int64 humanId = 1;
}

message InviteCreateOutput {
	Invite invite = 1;
}

message InviteCancelDto {
	int64 inviteId = 1;
}

message InviteCancelOutput {
	
}

message InviteAcceptDto {
	int64 inviteId = 1;
}

message InviteAcceptOutput {
	Member member = 1;
}

message InviteDeclineDto {
	int64 inviteId = 1;
}

message InviteDeclineOutput {
	
}

// service

service MachineService {
	rpc create (MachineCreateDto) returns (MachineCreateOutput) {}
	rpc update (MachineUpdateDto) returns (MachineUpdateOutput) {}
	rpc delete (MachineDeleteDto) returns (MachineDeleteOutput) {}
	rpc get (MachineGetDto) returns (MachineGetOutput) {}
}
  
// models

message Machine {
	int64 id = 1;
  	string name = 2;
	int64 avatarId = 3;
	int64 creatorId = 4;
}

// messages

message MachineCreateDto {
	string name = 1;
	int64 avatarId = 2;
}

message MachineCreateOutput {
	Machine machine = 1;
	Session session = 2;
}

message MachineUpdateDto {
	int64 machineId = 1;
	string name = 2;
	int64 avatarId = 3;
}

message MachineUpdateOutput {
	Machine machine = 1;
}

message MachineDeleteDto {
	int64 machineId = 1;
}

message MachineDeleteOutput {}

message MachineGetDto {
	string machineId = 1;
}

message MachineGetOutput {
	Machine machine = 1;
	Session session = 2;
}

// service

service WorkerService {
	rpc create (WorkerCreateDto) returns (WorkerCreateOutput) {}
	rpc update (WorkerUpdateDto) returns (WorkerUpdateOutput) {}
	rpc delete (WorkerDeleteDto) returns (WorkerDeleteOutput) {}
	rpc read (WorkerReadDto) returns (WorkerReadOutput) {}
	rpc deliver (WorkerDeliverDto) returns (WorkerDeliverOutput) {}
}
  
// models

message Worker {
	int64 id = 1;
	int64 roomId = 2;
	int64 machineId = 3;
	string metadata = 4;
}

// messages

message WorkerCreateDto {
	int64 machineId = 1;
	string metadata = 2;
}

message WorkerCreateOutput {
	Worker worker = 1;
}

message WorkerUpdateDto {
	int64 workerId = 1;
	string metadata = 2;
}

message WorkerUpdateOutput {
	Worker worker = 1;
}

message WorkerDeleteDto {
	int64 workerId = 1;
}

message WorkerDeleteOutput {}

message WorkerReadDto {
	
}

message WorkerReadOutput {
	repeated Worker workers = 1;
}

message WorkerDeliverDto {
	int64 workerId = 1;
	int64 userId = 2;
	string data = 3;
}

message WorkerDeliverOutput {
	bool passed = 1;
}
